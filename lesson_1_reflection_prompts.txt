How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It pointed me to the lines that had differences on them so I could narrow my search, rather than
    Going through the whole document.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It makes error checking easier and faster when comparing to old code. Also let's you go back to old
    ideas if you got rid of them but feel they could have some merit after all.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    When manually choosing you can save just the versions that you want, but you have to remember to do it.
    If you forget then there is no save. If it's automatically saved then you don't have to remember but
    it could be saving a process that is only half done.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think Git does it all in one commit as its more efficient. Google Docs does it seperately to prevent
    errors from spreading.

How can you use the commands git log and git diff to view the history of files?

    git log will bring up the list of everytime the file was saved. git diff lets you see the differneces
    between those saves.

How might using version control make you more confident to make changes that
could break something?

    Because I can go back and load previous versions that were working I can always go back if something
    goes wrong.

Now that you have your workspace set up, what do you want to try using Git for?

    Version control on macro developed for converting data.